mutate(Country = ifelse(State == "Hong Kong", "Hong Kong", Country),
Country = ifelse(Country == "Taiwan*", "Taiwan", Country),
Country = ifelse(Country == "US", "United States", Country),
Country = ifelse(Country == "Korea, South", "South Korea", Country))
deaths = deaths %>%
mutate(Country = ifelse(State == "Hong Kong", "Hong Kong", Country),
Country = ifelse(Country == "Taiwan*", "Taiwan", Country),
Country = ifelse(Country == "US", "United States", Country),
Country = ifelse(Country == "Korea, South", "South Korea", Country))
fwrite(confirmed, '../covid19-Django/trends/data/confirmed_cases.csv')
fwrite(deaths, '../covid19-Django/trends/data/num_deaths.csv')
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = Num_Deaths/Num_Confirmed) %>%
arrange(desc(Death_Rate))
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F))
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
View(gdp_pc)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country")
View(joined_data)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = Num_Deaths/Num_Confirmed) %>%
arrange(desc(Death_Rate))
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = Num_Deaths/Num_Confirmed) %>%
arrange(desc(Death_Rate))
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = Num_Deaths/Num_Confirmed) %>%
arrange(desc(Death_Rate))
plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
head(joined_data)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = Num_Deaths/Num_Confirmed) %>%
arrange(desc(Death_Rate))
country_abbrevs = fread("data/country_abbrevs.css", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = Num_Deaths/Num_Confirmed) %>%
arrange(desc(Death_Rate))
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,2)*100) %>%
arrange(desc(Death_Rate))
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate))
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate))
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
View(coucountry_abbrevs)
View(country_abbrevs)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate))
head(confirmed)
head(deaths)
head(gdp_pc)
head(coucountry_abbrevs)
head(country_abbrevs)
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate))
rm(list=ls())
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
#filter(Num_Confirmed > 5000) %>%
filter(Num_Confirmed > 15000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
#filter(Num_Confirmed > 5000) %>%
filter(Num_Confirmed > 12000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate))
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
#filter(Num_Confirmed > 5000) %>%
filter(Num_Confirmed > 10000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
#filter(Num_Confirmed > 5000) %>%
filter(Num_Confirmed > 10000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
#filter(Num_Confirmed > 5000) %>%
filter(Num_Confirmed > 10000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
# filter(Num_Confirmed > 10000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate)) %>%
mutate(Country_Abbr = ifelse(Num_Confirmed > 25000, Country_Abbr, ''))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
# filter(Num_Confirmed > 10000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate)) %>%
mutate(Country_Abbr = ifelse(Num_Confirmed > 25000, Country_Abbr, ' '))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
# filter(Num_Confirmed > 10000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate)) %>%
mutate(Country_Abbr = ifelse(Num_Confirmed > 20000, Country_Abbr, ' '))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
# filter(Num_Confirmed > 10000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate)) # %>%
# mutate(Country_Abbr = ifelse(Num_Confirmed > 20000, Country_Abbr, ' '))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
# filter(Num_Confirmed > 10000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate)) # %>%
# mutate(Country_Abbr = ifelse(Num_Confirmed > 20000, Country_Abbr, ' '))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
filter(Num_Confirmed > 5000) %>%
# filter(Num_Confirmed > 10000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate)) # %>%
# mutate(Country_Abbr = ifelse(Num_Confirmed > 20000, Country_Abbr, ' '))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
confirmed = confirmed %>%
filter(Date == max(confirmed$Date)) %>%
group_by(Country) %>%
summarise(Num_Confirmed = sum(Num_Confirmed, na.rm=T)) %>% ungroup()
deaths = deaths %>%
filter(Date == max(deaths$Date)) %>%
group_by(Country) %>%
summarise(Num_Deaths= sum(Num_Deaths, na.rm=T)) %>% ungroup()
gdp_pc = fread("data/GDP_per_capita.csv", stringsAsFactors = F)
country_abbrevs = fread("data/country_abbrevs.csv", stringsAsFactors = F)
joined_data = confirmed %>%
left_join(deaths, by="Country") %>%
left_join(gdp_pc, by="Country") %>%
left_join(country_abbrevs, by="Country") %>%
# filter(Num_Confirmed > 5000) %>%
filter(Num_Confirmed > 10000) %>%
mutate(Death_Rate = round(Num_Deaths/Num_Confirmed,3)*100) %>%
arrange(desc(Death_Rate)) # %>%
# mutate(Country_Abbr = ifelse(Num_Confirmed > 20000, Country_Abbr, ' '))
# plot(joined_data$GDP_Per_Capita, joined_data$Dath_Rate)
fwrite(joined_data, '../covid19-Django/trends/data/death_rate.csv')
confirmed = fread('../covid19-Django/trends/data/confirmed_cases.csv', stringsAsFactors = F)
deaths = fread('../covid19-Django/trends/data/num_deaths.csv', stringsAsFactors = F)
View(deaths)
x = deaths %>% group_by(Country, Date) %>% summarise(Num_Deaths = sum(Num_Deaths))
View(x)
#!/usr/local/bin/Rscript
setwd("~/Documents/GitHub/covid19-Rcode/")
library(data.table)
library(dplyr)
library(tidyr)
# read in data
intl_confirmed = fread("data/time_series_covid19_confirmed_global.csv", stringsAsFactors = F)
intl_confirmed = intl_confirmed %>% select(-Lat, -Long)
intl_confirmed = gather(intl_confirmed, Date, Num_Confirmed, 3:ncol(intl_confirmed), factor_key=TRUE)
colnames(intl_confirmed) = c("State", "Country", "Date", "Num_Confirmed")
intl_deaths = fread("data/time_series_covid19_deaths_global.csv", stringsAsFactors = F)
intl_deaths = intl_deaths %>% select(-Lat, -Long)
intl_deaths = gather(intl_deaths, Date, Num_Deaths, 3:ncol(intl_deaths), factor_key=TRUE)
colnames(intl_deaths) = c("State", "Country", "Date", "Num_Deaths")
View(intl_confirmed)
View(intl_confirmed %>% filter(Country=="US"))
View(intl_deaths %>% filter(Country=="US"))
us_confirmed = fread("data/time_series_covid19_confirmed_US.csv", stringsAsFactors = F)
us_confirmed = us_confirmed %>% select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2, -Combined_Key, -Lat, -Long_)
us_confirmed = gather(us_confirmed, Date, Num_Confirmed, 3:ncol(us_confirmed), factor_key=TRUE)
colnames(us_confirmed) = c("State", "Country", "Date", "Num_Confirmed")
us_confirmed = us_confirmed %>% group_by(State, Country, Date) %>% summarise(Num_Confirmed = sum(Num_Confirmed)) %>% ungroup()
us_deaths = fread("data/time_series_covid19_deaths_US.csv", stringsAsFactors = F)
us_deaths = us_deaths %>% select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2, -Combined_Key, -Lat, -Long_)
us_deaths = gather(us_deaths, Date, Num_Deaths, 3:ncol(us_deaths), factor_key=TRUE)
colnames(us_deaths) = c("State", "Country", "Date", "Num_Deaths")
us_deaths = us_deaths %>% group_by(State, Country, Date) %>% summarise(Num_Deaths = sum(Num_Deaths)) %>% ungroup() %>% filter(Date != "Population")
x = us_deaths %>% group_by(Country, Date) %>% summarise(Num_Deaths = sum(Num_Deaths))
View(x)
us_deaths = fread("data/time_series_covid19_deaths_US.csv", stringsAsFactors = F)
View(us_deaths)
sum(us_deaths$`4/24/20`)
sum(us_deaths$`4/24/20`)
sum(us_confirmed$`4/24/20`)
us_confirmed = fread("data/time_series_covid19_confirmed_US.csv", stringsAsFactors = F)
sum(us_confirmed$`4/24/20`)
x = intintl_confirmed %>% filter(Country=="US")
x = intl_confirmed %>% filter(Country=="US")
View(x)
us_deaths = fread("data/time_series_covid19_deaths_US.csv", stringsAsFactors = F)
us_deaths = gather(us_deaths, Date, Num_Deaths, 3:ncol(us_deaths), factor_key=TRUE)
us_deaths = fread("data/time_series_covid19_deaths_US.csv", stringsAsFactors = F)
View(us_deaths)
x = us_deaths %>% filter(Province_State == "New York")
sum(x$`4/24/20`)
us_deaths = fread("data/time_series_covid19_deaths_US.csv", stringsAsFactors = F)
us_deaths = us_deaths %>% select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2, -Combined_Key, -Lat, -Long_)
us_deaths = gather(us_deaths, Date, Num_Deaths, 3:ncol(us_deaths), factor_key=TRUE)
colnames(us_deaths) = c("State", "Country", "Date", "Num_Deaths")
us_deaths = us_deaths %>% group_by(State, Country, Date) %>% summarise(Num_Deaths = sum(Num_Deaths)) %>% ungroup() %>% filter(Date != "Population")
View(us_deaths)
sum(us_deaths$NNum_Deaths)
sum(us_deaths$Num_Deaths)
us_deaths = fread("data/time_series_covid19_deaths_US.csv", stringsAsFactors = F)
us_deaths = us_deaths %>% select(-UID, -iso2, -iso3, -code3, -FIPS, -Admin2, -Combined_Key, -Lat, -Long_)
View(us_deaths)
x = us_deaths %>% select(-Province_State, -Country_Region, -Population)
View(x)
sum(x)
sum(x$`4/24/20`)
